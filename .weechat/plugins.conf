#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[var]
guile.check_license = "off"
lua.check_license = "off"
lua.urlselect.buffer_name = "normal"
lua.urlselect.buffer_name_color = "green"
lua.urlselect.buffer_number_color = "brown"
lua.urlselect.cmd.i = "/input insert ${url}\x20"
lua.urlselect.cmd.o = "/exec -bg -nosh xdg-open ${url}"
lua.urlselect.help_color = "default"
lua.urlselect.highlight_color = "yellow,magenta"
lua.urlselect.index_color = "brown"
lua.urlselect.key_color = "cyan"
lua.urlselect.label.i = "insert into input bar"
lua.urlselect.label.o = "xdg-open"
lua.urlselect.message_color = "default"
lua.urlselect.nick_color = ""
lua.urlselect.scan_merged_buffers = "0"
lua.urlselect.search_prompt_color = "default"
lua.urlselect.search_scope = "url"
lua.urlselect.search_scope_color = "green"
lua.urlselect.status_color = "black,green"
lua.urlselect.status_timeout = "1300"
lua.urlselect.tags = "notify_message,notify_private,notify_highlight"
lua.urlselect.time_color = "default"
lua.urlselect.time_format = "%H:%M:%S"
lua.urlselect.title_color = "default"
lua.urlselect.url_color = "_lightblue"
lua.urlselect.use_simple_matching = "0"
perl.atcomplete.enabled = "on"
perl.beep.beep_command_dcc = "$bell"
perl.beep.beep_command_highlight = "$bell"
perl.beep.beep_command_pv = "$bell"
perl.beep.beep_command_timeout = "30000"
perl.beep.beep_dcc = "on"
perl.beep.beep_highlight = "on"
perl.beep.beep_highlight_blacklist = "off"
perl.beep.beep_highlight_whitelist = "off"
perl.beep.beep_pv = "on"
perl.beep.beep_pv_blacklist = "off"
perl.beep.beep_pv_whitelist = "off"
perl.beep.beep_trigger_highlight = ""
perl.beep.beep_trigger_pv = ""
perl.beep.bell_always = ""
perl.beep.blacklist_nicks = ""
perl.beep.whitelist_channels = ""
perl.beep.whitelist_nicks = ""
perl.check_license = "off"
perl.colorize_lines.blacklist_buffers = ""
perl.colorize_lines.buffers = "all"
perl.colorize_lines.highlight = "on"
perl.colorize_lines.ignore_tags = "irc_ctcp"
perl.colorize_lines.lines = "on"
perl.colorize_lines.nicks = ""
perl.colorize_lines.own_lines = "on"
perl.colorize_lines.tags = "irc_privmsg"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.volumeter.device_name = "eth0"
perl.volumeter.display_char = "MiB"
perl.volumeter.refresh_rate = "5000"
python.anotify.icon = "/usr/share/pixmaps/weechat.xpm"
python.anotify.show_channel_topic = "on"
python.anotify.show_dcc = "on"
python.anotify.show_highlighted_message = "on"
python.anotify.show_invite_message = "on"
python.anotify.show_notice_message = "off"
python.anotify.show_private_action_message = "on"
python.anotify.show_private_message = "on"
python.anotify.show_public_action_message = "off"
python.anotify.show_public_message = "off"
python.anotify.show_server = "on"
python.anotify.show_upgrade_ended = "on"
python.anotify.sticky = "off"
python.anotify.sticky_away = "on"
python.apply_corrections.check_every = "5"
python.apply_corrections.data_timeout = "60"
python.apply_corrections.message_limit = "2"
python.apply_corrections.print_format = "[nick]: [corrected]"
python.apply_corrections.print_limit = "1"
python.autojoin.autosave = "off"
python.bandwidth.device = "eth0"
python.bandwidth.format = "%N(↓%DV%DU/s ↑%UV%UU/s)"
python.bandwidth.refresh_rate = "5"
python.bandwidth.separator = " "
python.chanstat.average_period = "30"
python.chanstat.path = "%h/chanstat"
python.chanstat.show_lows = "on"
python.chanstat.show_peaks = "on"
python.check_license = "off"
python.title.current_buffer_prefix = ""
python.title.current_buffer_suffix = ""
python.title.hotlist_buffer_prefix = ""
python.title.hotlist_buffer_suffix = ""
python.title.hotlist_number_prefix = ""
python.title.hotlist_number_suffix = ""
python.title.hotlist_separator = ":"
python.title.short_name = "on"
python.title.show_hotlist = "on"
python.title.title_prefix = "[WeeChat ${info:version}] "
python.title.title_priority = "2"
python.title.title_suffix = ""
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = ""
python.urlserver.http_auth_redirect = "on"
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = ""
python.urlserver.http_hostname_display = ""
python.urlserver.http_open_in_new_page = "on"
python.urlserver.http_port = ""
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_filtered = "off"
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"
python.vimode.no_warn = "off"
ruby.check_license = "off"
ruby.slacklog.count = "1000"
ruby.slacklog.NAME.api_token = "xoxp-4184670489-4184670497-241184533094-57d6278bd7009d9efbbe1930ed758dcf"
ruby.slacklog.servers = "slack"
tcl.check_license = "off"

[desc]
lua.urlselect.buffer_name = "Type of name to use inside urlselect_buffer_name item. Valid values are "full", "normal", and "short""
lua.urlselect.buffer_name_color = "Color for buffer name"
lua.urlselect.buffer_number_color = "Color for buffer number"
lua.urlselect.help_color = "Color for help text"
lua.urlselect.highlight_color = "Nickname color for highlighted message"
lua.urlselect.index_color = "Color for URL index"
lua.urlselect.key_color = "Color for list of keys"
lua.urlselect.message_color = "Color for message text"
lua.urlselect.nick_color = "Color for nickname. Leave empty to use Weechat's nick color"
lua.urlselect.scan_merged_buffers = "Scan URLs from buffers that are merged with the current one"
lua.urlselect.search_prompt_color = "Color for search prompt"
lua.urlselect.search_scope = "Default search scope. Valid values are: url, msg, nick or nick+msg"
lua.urlselect.search_scope_color = "Color for current search scope"
lua.urlselect.status_color = "Color for status notification"
lua.urlselect.status_timeout = "Timeout for displaying status notification (in milliseconds)"
lua.urlselect.tags = "Comma separated list of tags. If not empty, script will only scan URLs from messages with any of these tags"
lua.urlselect.time_color = "Color for time"
lua.urlselect.time_format = "Format of time"
lua.urlselect.title_color = "Color for bar title"
lua.urlselect.url_color = "Color for URL"
lua.urlselect.use_simple_matching = "Use simple pattern matching when scanning for URLs"
perl.atcomplete.enabled = "enable completion of nicks starting with @ (default: "on")"
perl.beep.beep_command_dcc = "command for beep on dcc, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_highlight = "command for beep on highlight, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_pv = "command for beep on private message, special value "$bell" is allowed, as well as "$bell;command" (default: "$bell")"
perl.beep.beep_command_timeout = "timeout for command run (in milliseconds, 0 = never kill (not recommended)) (default: "30000")"
perl.beep.beep_dcc = "beep on dcc (default: "on")"
perl.beep.beep_highlight = "beep on highlight (default: "on")"
perl.beep.beep_highlight_blacklist = "turn blacklist for highlights on or off (default: "off")"
perl.beep.beep_highlight_whitelist = "turn whitelist for highlights on or off (default: "off")"
perl.beep.beep_pv = "beep on private message (default: "on")"
perl.beep.beep_pv_blacklist = "turn blacklist for private messages on or off (default: "off")"
perl.beep.beep_pv_whitelist = "turn whitelist for private messages on or off (default: "off")"
perl.beep.beep_trigger_highlight = "word that will trigger execution of beep_command_highlight (if empty, anything will trigger) (default: "")"
perl.beep.beep_trigger_pv = "word that will trigger execution of beep_command_pv (it empty, anything will trigger) (default: "")"
perl.beep.bell_always = "use $bell on private messages and/or highlights regardless of trigger and whitelist settings (example: "pv,highlight") (default: "")"
perl.beep.blacklist_nicks = "comma-separated list of "server.nick": if not empty, these nicks will not be able to trigger execution of commands. Cannot be used in conjuction with whitelist (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.beep.whitelist_channels = "comma-separated list of "server.#channel": if not empty, only these channels will trigger execution of commands (example: "freenode.#weechat,freenode.#channel2") (default: "")"
perl.beep.whitelist_nicks = "comma-separated list of "server.nick": if not empty, only these nicks will trigger execution of commands (example: "freenode.nick1,freenode.nick2") (default: "")"
perl.colorize_lines.blacklist_buffers = "Comma-separated list of channels to be ignored (e.g. freenode.#weechat,*.#python)"
perl.colorize_lines.buffers = "Buffer type affected by the script (all/channel/query, default: all)"
perl.colorize_lines.highlight = "Apply highlight color to the highlighted lines (off/on/nicks). The latter will limit highlighting to nicknames in option 'nicks'"
perl.colorize_lines.ignore_tags = "Comma-separated list of tags to ignore (see /debug tags)"
perl.colorize_lines.lines = "Apply nickname color to the lines (off/on/nicks). The latter will limit highlighting to nicknames in option 'nicks'"
perl.colorize_lines.nicks = "Comma-separater list of nicks (e.g. freenode.cat,*.dog) OR file name starting with '/' (e.g. /file.txt). In the latter case, nicknames will get loaded from that file inside weechat folder (e.g. from ~/.weechat/file.txt). Nicknames in file are newline-separated (e.g. freenode.dog\n*.cat)"
perl.colorize_lines.own_lines = "Apply nickname color to own lines (off/on/only). The latter turns off all other kinds of coloring altogether"
perl.colorize_lines.tags = "Comma-separated list of tags to accept (see /debug tags)"
python.apply_corrections.check_every = "Interval between each check for expired messages."
python.apply_corrections.data_timeout = "Time before a message is expired."
python.apply_corrections.message_limit = "Number of messages to store per nick."
python.apply_corrections.print_format = "Format string for the printed corrections."
python.apply_corrections.print_limit = "Maximum number of lines to correct."
python.bandwidth.device = "Network interface(s) to monitor, in order, separated by ';'"
python.bandwidth.format = "Output formatting: %N = network interface, %DV = downstream value, %DU = downstream units (K or M), %UV = upstream value, %UU = upstream units (K or M).  Note: default setting uses UTF-8"
python.bandwidth.refresh_rate = "Refresh rate in seconds"
python.bandwidth.separator = "String displayed between output for multiple devices"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed after message (default: "darkgray")"
python.urlserver.color_in_msg = "color for urls displayed inside irc message: it is a number (irc color) between 00 and 15 (see doc for a list of irc colors) (default: "")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.display_urls_in_msg = "add shorten url next to the original url (only in IRC messages) (useful for urlserver behind relay/irc) (default: "off")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (note: content is evaluated, see /help eval) (default: "")"
python.urlserver.http_auth_redirect = "require the login/password (if option "http_auth" is set) for URLs redirections (default: "on")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_open_in_new_page = "open links in new pages/tabs (default: "on")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_filtered = "shorten URLs in filtered messages (with /filter) (default: "off")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
python.vimode.no_warn = "don't warn about problematickeybindings and tmux/screen (default: "off")"
